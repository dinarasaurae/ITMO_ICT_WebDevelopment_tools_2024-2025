{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Web programming using FastAPI","text":"<p>\u042d\u0442\u043e \u0414\u0438\u043d\u0430\u0440\u0430 \u0425\u0438\u0441\u0430\u043c\u0435\u0442\u0434\u0438\u043d\u043e\u0432\u0430, \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u0433\u0440\u0443\u043f\u043f\u044b K3341. \u042d\u0442\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043a \u043c\u043e\u0438\u043c \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435.</p>"},{"location":"lab1/erd/","title":"ERD","text":""},{"location":"lab1/lab3/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1.3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 \u0432 FastAPI \u0441 SQLAlchemy \u0438 Alembic","text":""},{"location":"lab1/lab3/#1","title":"1. \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Alembic, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 <code>.env</code> \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0411\u0414, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 <code>alembic.ini</code>, \u0447\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</p>"},{"location":"lab1/lab3/#21","title":"2.1 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439","text":"<p><pre><code>pip install alembic python-dotenv\n</code></pre> <code>python-dotenv</code> \u2013 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0438\u0437 <code>.env</code> \u0444\u0430\u0439\u043b\u0430.</p>"},{"location":"lab1/lab3/#21-alembic","title":"2.1 \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0442\u0437\u0430\u0446\u0438\u044f Alembic","text":"<p><pre><code>alembic init migrations\n</code></pre> \u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u0432 \u043a\u043e\u0440\u043d\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 <code>migrations/</code> \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439: <pre><code>/migrations\n\u251c\u2500\u2500 versions/       # \u041a\u0430\u0442\u0430\u043b\u043e\u0433 \u0441 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439\n\u251c\u2500\u2500 env.py          # \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414\n\u251c\u2500\u2500 README          # \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e Alembic\n\u251c\u2500\u2500 script.py.mako  # \u0428\u0430\u0431\u043b\u043e\u043d \u043d\u043e\u0432\u044b\u0445 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439\nalembic.ini         # \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f Alembic\n</code></pre></p>"},{"location":"lab1/lab3/#31-env","title":"3.1 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 <code>.env</code> \u0432 \u043a\u043e\u0440\u0435\u043d\u044c \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u0421\u043e\u0437\u0434\u0430\u043d <code>.env</code>: <pre><code>DATABASE_URL=postgresql://postgres:password@localhost:5432/mydb\n</code></pre></p>"},{"location":"lab1/lab3/#32-connectionpy","title":"3.2 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 <code>connection.py</code>","text":"<p><pre><code>import os\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker, declarative_base\nfrom dotenv import load_dotenv\n\nload_dotenv()\nDATABASE_URL = os.getenv(\"DATABASE_URL\")\n\n# \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0411\u0414\nengine = create_engine(DATABASE_URL)\nSessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)\nBase = declarative_base()\n</code></pre> <code>DATABASE_URL</code> \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0434\u0435, \u0430 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f \u0438\u0437 <code>.env</code>.</p>"},{"location":"lab1/lab3/#33-alembicini","title":"3.3 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 <code>alembic.ini</code>","text":"<p>\u0412 <code>alembic.ini</code>: <pre><code>sqlalchemy.url = postgresql://postgres:password@localhost:5432/mydb\n</code></pre> \u041d\u0430: <pre><code>sqlalchemy.url = %(DATABASE_URL)s\n</code></pre> \u0422\u0435\u043f\u0435\u0440\u044c URL \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f.</p>"},{"location":"lab1/lab3/#4-envpy","title":"4 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 <code>env.py</code>","text":"<p><pre><code>import os\nfrom logging.config import fileConfig\nfrom sqlalchemy import engine_from_config, pool\nfrom alembic import context\nfrom dotenv import load_dotenv\nfrom models import Base  \n\n# \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\nload_dotenv()\nconfig = context.config\nconfig.set_main_option(\"sqlalchemy.url\", os.getenv(\"DATABASE_URL\"))\n\n# \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Alembic\nfileConfig(config.config_file_name)\n\n# \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\ntarget_metadata = Base.metadata\n\ndef run_migrations_offline():\n    \"\"\"\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432 offline-\u0440\u0435\u0436\u0438\u043c\u0435 (\u0431\u0435\u0437 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414)\"\"\"\n    url = config.get_main_option(\"sqlalchemy.url\")\n    context.configure(url=url, target_metadata=target_metadata, literal_binds=True, dialect_opts={\"paramstyle\": \"named\"})\n\n    with context.begin_transaction():\n        context.run_migrations()\n\ndef run_migrations_online():\n    \"\"\"\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432 online-\u0440\u0435\u0436\u0438\u043c\u0435 (\u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043a \u0411\u0414)\"\"\"\n    connectable = engine_from_config(config.get_section(config.config_ini_section), prefix=\"sqlalchemy.\", poolclass=pool.NullPool)\n\n    with connectable.connect() as connection:\n        context.configure(connection=connection, target_metadata=target_metadata)\n\n        with context.begin_transaction():\n            context.run_migrations()\n\nif context.is_offline_mode():\n    run_migrations_offline()\nelse:\n    run_migrations_online()\n</code></pre> Alembic \u0447\u0438\u0442\u0430\u0435\u0442 URL \u0438\u0437 <code>.env</code> \u0438 \u0432\u0438\u0434\u0438\u0442 SQLAlchemy-\u043c\u043e\u0434\u0435\u043b\u0438.</p>"},{"location":"lab1/lab3/#51-modelspy","title":"5.1 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 <code>models.py</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435   \u043f\u043e\u043b\u0435 <code>age</code> \u0432 <code>UserDB</code>: <pre><code>from sqlalchemy import Column, Integer, String\nfrom connection import Base\n\nclass UserDB(Base):\n    __tablename__ = \"users\"\n\n    id = Column(Integer, primary_key=True, index=True)\n    email = Column(String, unique=True, nullable=False)\n    full_name = Column(String, nullable=False)\n    phone = Column(String, nullable=False)\n    role = Column(String, nullable=False)\n    age = Column(Integer, nullable=True)  # \u041d\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435\n</code></pre></p>"},{"location":"lab1/lab3/#52","title":"5.2 \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<p><pre><code>alembic revision --autogenerate -m \"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u043f\u043e\u043b\u0435 age \u0432 users\"\n</code></pre> Alembic \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u043d\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b \u0432 <code>migrations/versions/</code>: <pre><code>migrations/versions/202403061200_add_age_field.py\n</code></pre></p>"},{"location":"lab1/lab3/#53","title":"5.3 \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430","text":"<p><pre><code>from alembic import op\nimport sqlalchemy as sa\n\n# ID \u0440\u0435\u0432\u0438\u0437\u0438\u0438\nrevision = '202403061200'\ndown_revision = 'previous_revision_id'\nbranch_labels = None\ndepends_on = None\n\ndef upgrade():\n    op.add_column('users', sa.Column('age', sa.Integer(), nullable=True))\n\ndef downgrade():\n    op.drop_column('users', 'age')\n</code></pre> <code>upgrade()</code> \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0435 <code>age</code>. <code>downgrade()</code> \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u043f\u0440\u0438 \u043e\u0442\u043a\u0430\u0442\u0435.</p>"},{"location":"lab1/lab3/#54","title":"5.4 \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<pre><code>alembic upgrade head\n</code></pre>"},{"location":"lab1/lab3/#6","title":"6 \u041e\u0442\u043a\u0430\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438:","text":"<pre><code>alembic downgrade -1\n</code></pre>"},{"location":"lab1/lab3/#71-gitignore","title":"7.1 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 <code>.gitignore</code>","text":"<p><pre><code>.env\n</code></pre> \u2714 \u0422\u0435\u043f\u0435\u0440\u044c <code>.env</code> \u043d\u0435 \u043f\u043e\u043f\u0430\u0434\u0451\u0442 \u0432 Git.</p>"},{"location":"lab1/lab3/#72-fastapi-env","title":"7.2 \u0417\u0430\u043f\u0443\u0441\u043a FastAPI \u0441 <code>.env</code>","text":"<pre><code>uvicorn main:app --reload\n</code></pre>"},{"location":"lab1/service/","title":"Psychologists Service","text":""},{"location":"lab1/service/#_1","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 FastAPI, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0435\u0435 PostgreSQL \u0438 SQLAlchemy \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Alembic.  </p>"},{"location":"lab1/service/#_2","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0438 \u0441\u0432\u044f\u0437\u0438","text":"<ul> <li><code>User</code> \u2013 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438.</li> <li><code>Psychologist</code> \u2013 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u044b \u043a <code>User</code> (\u043e\u0434\u0438\u043d-\u043a-\u043e\u0434\u043d\u043e\u043c\u0443).</li> <li><code>Review</code> \u2013 \u043e\u0442\u0437\u044b\u0432\u044b, \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0435 <code>User</code> (\u043a\u043b\u0438\u0435\u043d\u0442\u0430) \u0438 <code>Psychologist</code> (\u043c\u043d\u043e\u0433\u0438\u0435-\u043a-\u043e\u0434\u043d\u043e\u043c\u0443).</li> <li><code>Specialization</code> \u2013 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0443 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u043e\u0432 (\u043c\u043d\u043e\u0433\u0438\u0435-\u043a\u043e-\u043c\u043d\u043e\u0433\u0438\u043c).</li> <li><code>Schedule</code> \u2013 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430 (\u043e\u0434\u0438\u043d-\u043a\u043e-\u043c\u043d\u043e\u0433\u0438\u043c).</li> <li><code>Appointment</code> \u2013 \u0437\u0430\u043f\u0438\u0441\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438 (\u043c\u043d\u043e\u0433\u0438\u0435-\u043a-\u043e\u0434\u043d\u043e\u043c\u0443).</li> </ul>"},{"location":"lab1/service/#api","title":"\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b API","text":""},{"location":"lab1/service/#1","title":"1. \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438","text":""},{"location":"lab1/service/#_3","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<p>POST /users/register \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (JSON): <pre><code>{\n  \"email\": \"example@example.com\",\n  \"full_name\": \"\u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f\",\n  \"phone\": \"+79998887766\",\n  \"password\": \"securepassword\"\n}\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"id\": 1,\n  \"email\": \"example@example.com\",\n  \"full_name\": \"\u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f\",\n  \"phone\": \"+79998887766\",\n  \"created_at\": \"2025-03-13T06:44:52.450633\"\n}\n</code></pre></p>"},{"location":"lab1/service/#_4","title":"\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f (\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430)","text":"<p>POST /users/login \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 JWT-\u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (JSON): <pre><code>{\n  \"email\": \"example@example.com\",\n  \"password\": \"securepassword\"\n}\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"access_token\": \"jwt_token_here\",\n  \"token_type\": \"bearer\"\n}\n</code></pre></p>"},{"location":"lab1/service/#_5","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435","text":"<p>GET /users/me \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0437\u0430\u043f\u0440\u043e\u0441\u0430: <pre><code>Authorization: Bearer jwt_token_here\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"id\": 1,\n  \"email\": \"example@example.com\",\n  \"full_name\": \"\u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f\",\n  \"phone\": \"+79998887766\",\n  \"created_at\": \"2025-03-13T06:44:52.450633\"\n}\n</code></pre></p>"},{"location":"lab1/service/#_6","title":"\u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f","text":"<p>PUT /users/change-password \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e.</p> <p>\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (JSON): <pre><code>{\n  \"new_password\": \"newsecurepassword\"\n}\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"message\": \"\u041f\u0430\u0440\u043e\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d\"\n}\n</code></pre></p>"},{"location":"lab1/service/#_7","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<p>DELETE /users/delete \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e. \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"message\": \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0443\u0434\u0430\u043b\u0451\u043d\"\n}\n</code></pre></p>"},{"location":"lab1/service/#2","title":"2. \u041f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0438","text":""},{"location":"lab1/service/#_8","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a\u0430\u043a \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430","text":"<p>POST /psychologists/ \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e. \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 <code>User</code> \u043a <code>Psychologist</code>.</p> <p>\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (JSON): <pre><code>{\n  \"experience\": 5,\n  \"bio\": \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430\",\n  \"price_per_hour\": 3000\n}\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"id\": 1,\n  \"user\": {\n    \"id\": 2,\n    \"email\": \"psychologist@example.com\",\n    \"full_name\": \"\u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f\",\n    \"phone\": \"+79998887766\",\n    \"created_at\": \"2025-03-13T06:44:52.450633\"\n  },\n  \"experience\": 5,\n  \"specializations\": [],\n  \"schedule\": [],\n  \"reviews\": [],\n  \"rating\": 0.0\n}\n</code></pre></p>"},{"location":"lab1/service/#_9","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0435","text":"<p>GET /psychologists/{psychologist_id} \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0435 \u043f\u043e \u0435\u0433\u043e ID.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: <pre><code>GET /psychologists/1\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"id\": 1,\n  \"user\": {\n    \"id\": 2,\n    \"email\": \"psychologist@example.com\",\n    \"full_name\": \"\u0418\u043c\u044f \u0424\u0430\u043c\u0438\u043b\u0438\u044f\",\n    \"phone\": \"+79998887766\",\n    \"created_at\": \"2025-03-13T06:44:52.450633\"\n  },\n  \"experience\": 5,\n  \"specializations\": [],\n  \"schedule\": [],\n  \"reviews\": [],\n  \"rating\": 0.0\n}\n</code></pre></p>"},{"location":"lab1/service/#3","title":"3. \u041e\u0442\u0437\u044b\u0432\u044b","text":""},{"location":"lab1/service/#_10","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430","text":"<p>POST /reviews/ \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0437\u044b\u0432 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0443.</p> <p>\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (JSON): <pre><code>{\n  \"client_id\": 1,\n  \"psychologist_id\": 2,\n  \"rating\": 4,\n  \"comment\": \"\u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\"\n}\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>{\n  \"id\": 1,\n  \"client_id\": 1,\n  \"psychologist_id\": 2,\n  \"rating\": 4,\n  \"comment\": \"\u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\",\n  \"created_at\": \"2025-03-13T07:30:00.450633\"\n}\n</code></pre></p>"},{"location":"lab1/service/#_11","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043e \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0435","text":"<p>GET /reviews/{psychologist_id} \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043f\u043e ID \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: <pre><code>GET /reviews/2\n</code></pre></p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>[\n  {\n    \"id\": 1,\n    \"client_id\": 1,\n    \"psychologist_id\": 2,\n    \"rating\": 4,\n    \"comment\": \"\u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\",\n    \"created_at\": \"2025-03-13T07:30:00.450633\"\n  }\n]\n</code></pre></p>"},{"location":"lab1/service/#4","title":"4. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":""},{"location":"lab1/service/#_12","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439","text":"<p>GET /specializations/ \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439.</p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>[\n  {\n    \"id\": 1,\n    \"name\": \"\u041a\u043e\u0433\u043d\u0438\u0442\u0438\u0432\u043d\u043e-\u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0447\u0435\u0441\u043a\u0430\u044f \u0442\u0435\u0440\u0430\u043f\u0438\u044f\",\n    \"description\": \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"\u0413\u0435\u0448\u0442\u0430\u043b\u044c\u0442-\u0442\u0435\u0440\u0430\u043f\u0438\u044f\",\n    \"description\": \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430\"\n  }\n]\n</code></pre></p>"},{"location":"lab1/service/#5","title":"5. \u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435","text":""},{"location":"lab1/service/#_13","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430","text":"<p>GET /schedule/{psychologist_id} \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430.</p> <p>\u041e\u0442\u0432\u0435\u0442 (200 OK): <pre><code>[\n  {\n    \"id\": 1,\n    \"psychologist_id\": 2,\n    \"day_of_week\": \"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\",\n    \"start_time\": \"09:00\",\n    \"end_time\": \"18:00\"\n  }\n]\n</code></pre></p>"},{"location":"lab1/service/#_14","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0441 JWT-\u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438.</li> <li>\u0412\u0441\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b, \u0442\u0440\u0435\u0431\u0443\u044e\u0449\u0438\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a: <pre><code>Authorization: Bearer &lt;\u0442\u043e\u043a\u0435\u043d&gt;\n</code></pre></li> <li><code>rating</code> \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0430 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432.</li> <li><code>Psychologist</code> \u0438 <code>User</code> \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u043e\u0434\u0438\u043d-\u043a-\u043e\u0434\u043d\u043e\u043c\u0443.</li> <li><code>Specialization</code> \u0438 <code>Psychologist</code> \u0438\u043c\u0435\u044e\u0442 \u0441\u0432\u044f\u0437\u044c \u043c\u043d\u043e\u0433\u0438\u0435-\u043a\u043e-\u043c\u043d\u043e\u0433\u0438\u043c.</li> <li><code>Review</code> \u0438 <code>Schedule</code> \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u0441 <code>Psychologist</code> \u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u0438\u043d-\u043a\u043e-\u043c\u043d\u043e\u0433\u0438\u043c.</li> </ul>"},{"location":"lab1/task1/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1.1. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 FastAPI","text":""},{"location":"lab1/task1/#1","title":"1. \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u0426\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u2014 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0432 \u0441\u0435\u0431\u044f API \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u043c\u0438. \u0412 \u0445\u043e\u0434\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f: - \u041e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u043e\u0441\u043d\u043e\u0432\u0430\u043c\u0438 FastAPI. - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c CRUD API \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0438 \u0438\u0445 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u043c\u0438. - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Pydantic \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.</p>"},{"location":"lab1/task1/#_1","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b","text":"<ol> <li> <p>\u041e\u0431\u044a\u0435\u043a\u0442 FastAPI <pre><code>   from fastapi import FastAPI\n   app = FastAPI()\n</code></pre></p> </li> <li> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 <pre><code>@app.get(\"/\")\ndef root():\n    return {\"message\": \"\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c!\"}\n</code></pre></p> </li> <li>\u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430 <pre><code>uvicorn main:app --reload\n</code></pre></li> </ol>"},{"location":"lab1/task1/#3","title":"3. \u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"lab1/task1/#31","title":"3.1 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f","text":"<ol> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u043e \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435:    <pre><code>python -m venv venv\nvenv\\Scripts\\activate \n</code></pre></li> <li>FastAPI \u0438 Uvicorn:    <pre><code>pip install fastapi[all]\n</code></pre></li> </ol>"},{"location":"lab1/task1/#32","title":"3.2 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>/psychologists_service\n    /temp_db.py          \n    /models.py           \n    /main.py            \n</code></pre>"},{"location":"lab1/task1/#33","title":"3.3 \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<pre><code>from models import RoleType\n\ntemp_db = [\n    {\n        \"id\": 1,\n        \"email\": \"seregapirat@gmail.com\",\n        \"full_name\": \"Serega Pirat\",\n        \"phone\": \"+1234567890\",\n        \"created_at\": \"2023-03-01T12:00:00\",\n        \"role\": RoleType.psychologist.value,\n        \"psychologist_data\": {\n            \"experience\": 5,\n            \"bio\": \"Licensed psychologist with expertise in CBT.\",\n            \"rating\": 4.8,\n            \"price_per_hour\": 100.00,\n            \"specializations\": [\n                {\"id\": 1, \"name\": \"Cognitive Behavioral Therapy\"},\n                {\"id\": 2, \"name\": \"Anxiety Disorders\"}\n            ]\n        }\n    },\n    {\n        \"id\": 2,\n        \"email\": \"dinaemae@gmail.com\",\n        \"full_name\": \"Dina Bolnaya\",\n        \"phone\": \"+1987654321\",\n        \"created_at\": \"2023-05-10T15:30:00\",\n        \"role\": RoleType.client.value,\n        \"psychologist_data\": None\n    }\n]\n</code></pre>"},{"location":"lab1/task1/#34","title":"3.4 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0414\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f Pydantic.  </p> <pre><code>from pydantic import BaseModel, EmailStr\nfrom typing import List, Optional\nfrom datetime import datetime\nfrom enum import Enum\n\nclass RoleType(str, Enum):\n    client = \"client\"\n    psychologist = \"psychologist\"\n\nclass Specialization(BaseModel):\n    id: int\n    name: str\n\nclass PsychologistData(BaseModel):\n    experience: int\n    bio: str\n    rating: float\n    price_per_hour: float\n    specializations: List[Specialization]\n\nclass User(BaseModel):\n    id: int\n    email: EmailStr\n    full_name: str\n    phone: str\n    created_at: datetime\n    role: RoleType\n    psychologist_data: PsychologistData | None = None\n</code></pre>"},{"location":"lab1/task1/#35-api-mainpy","title":"3.5 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 API \u0432 <code>main.py</code>","text":""},{"location":"lab1/task1/#351","title":"3.5.1 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","text":"<pre><code>from fastapi import FastAPI, HTTPException\nfrom models import User, Specialization\nfrom typing import Optional, List\nfrom temp_db import temp_db\n\napp = FastAPI()\n\n@app.get(\"/users\", response_model=List[User])\ndef get_users() -&gt; List[User]:\n    return temp_db\n</code></pre>"},{"location":"lab1/task1/#352-id","title":"3.5.2 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e <code>id</code>","text":"<pre><code>@app.get(\"/user/{user_id}\", response_model=User)\ndef get_user(user_id: int) -&gt; Optional[User]:\n    return next((user for user in temp_db if user[\"id\"] == user_id), None)\n</code></pre>"},{"location":"lab1/task1/#353","title":"3.5.3 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code>@app.post(\"/user\", response_model=User)\ndef add_user(user: User) -&gt; User:\n    temp_db.append(user.model_dump())\n    return user\n</code></pre>"},{"location":"lab1/task1/#354","title":"3.5.4 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code>@app.delete(\"/user/delete/{user_id}\")\ndef delete_user(user_id: int):\n    for i, user in enumerate(temp_db):\n        if user[\"id\"] == user_id:\n            temp_db.pop(i)\n            return {\"status\": 204, \"message\": \"\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0434\u0430\u043b\u0451\u043d\"}\n    raise HTTPException(status_code=404, detail=\"\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n</code></pre>"},{"location":"lab1/task1/#355","title":"3.5.5 \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code>@app.put(\"/user/{user_id}\", response_model=User)\ndef update_user(user_id: int, user: User):\n    for i, u in enumerate(temp_db):\n        if u[\"id\"] == user_id:\n            temp_db[i] = user.model_dump()\n            return user\n    raise HTTPException(status_code=404, detail=\"\u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n</code></pre>"},{"location":"lab1/task1/#36","title":"3.6 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u043c\u0438","text":""},{"location":"lab1/task1/#361","title":"3.6.1 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439","text":"<pre><code>@app.get(\"/specializations\", response_model=List[Specialization])\ndef get_specializations():\n    specializations = []\n    for user in temp_db:\n        if user[\"psychologist_data\"]:\n            specializations.extend(user[\"psychologist_data\"][\"specializations\"])\n    return specializations\n</code></pre>"},{"location":"lab1/task1/#362","title":"3.6.2 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433\u0443","text":"<pre><code>@app.post(\"/user/{user_id}/specialization\", response_model=User)\ndef add_specialization(user_id: int, specialization: Specialization):\n    for user in temp_db:\n        if user[\"id\"] == user_id and user[\"role\"] == \"psychologist\":\n            user[\"psychologist_data\"][\"specializations\"].append(specialization.dict())\n            return user\n    raise HTTPException(status_code=404, detail=\"Psychologist not found\")\n</code></pre>"},{"location":"lab1/task1/#363","title":"3.6.3 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<pre><code>@app.delete(\"/user/{user_id}/specialization/{specialization_id}\")\ndef delete_specialization(user_id: int, specialization_id: int):\n    for user in temp_db:\n        if user[\"id\"] == user_id and user[\"role\"] == \"psychologist\":\n            user[\"psychologist_data\"][\"specializations\"] = [\n                s for s in user[\"psychologist_data\"][\"specializations\"] if s[\"id\"] != specialization_id\n            ]\n            return {\"status\": 201, \"message\": \"deleted\"}\n    raise HTTPException(status_code=404, detail=\"Psychologist not found\")\n</code></pre>"},{"location":"lab1/task2/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1.2. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0411\u0414, SQLAlchemy \u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 Alembic","text":""},{"location":"lab1/task2/#1","title":"1. \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u2014 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c PostgreSQL \u043a FastAPI, \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c ORM (SQLAlchemy) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 Alembic.</p>"},{"location":"lab1/task2/#2","title":"2. \u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"lab1/task2/#21","title":"2.1 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439","text":"<p>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438: <pre><code>pip install fastapi[all] sqlalchemy psycopg2-binary alembic\n</code></pre></p>"},{"location":"lab1/task2/#22","title":"2.2 \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0444\u0430\u0439\u043b <code>connection.py</code> \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445:</p> <p><pre><code>from sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\nDATABASE_URL = \"postgresql://postgres:123@localhost:5433/psychologists_db\"\n\nengine = create_engine(DATABASE_URL, echo=True)\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n</code></pre> - <code>DATABASE_URL</code> \u2013 \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a PostgreSQL. - <code>engine</code> \u2013 \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0434\u0432\u0438\u0436\u043e\u043a \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. - <code>SessionLocal</code> \u2013 \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0441\u0435\u0441\u0441\u0438\u044e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0411\u0414. - <code>get_db()</code> \u2013 \u0444\u0443\u043d\u043a\u0446\u0438\u044f-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0411\u0414 \u0432 FastAPI.</p>"},{"location":"lab1/task2/#23","title":"2.3 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0424\u0430\u0439\u043b <code>models.py</code>:</p> <p><pre><code>from sqlalchemy import Column, Integer, String, ForeignKey, Table, Float\nfrom sqlalchemy.orm import relationship, declarative_base\nfrom pydantic import BaseModel\n\nBase = declarative_base()\n\npsychologist_specialization = Table(\n    \"psychologist_specialization\",\n    Base.metadata,\n    Column(\"psychologist_id\", Integer, ForeignKey(\"psychologists_data.id\"), primary_key=True),\n    Column(\"specialization_id\", Integer, ForeignKey(\"specializations.id\"), primary_key=True),\n)\n\nclass User(Base):\n    __tablename__ = \"users\"\n\n    id = Column(Integer, primary_key=True, index=True)\n    email = Column(String, unique=True, nullable=False)\n    full_name = Column(String, nullable=False)\n    phone = Column(String, nullable=False)\n    role = Column(String, nullable=False)\n\n    psychologist_data = relationship(\"PsychologistData\", back_populates=\"user\", uselist=False)\n\nclass PsychologistData(Base):\n    __tablename__ = \"psychologists_data\"\n\n    id = Column(Integer, primary_key=True, index=True)\n    experience = Column(Integer, nullable=False)\n    bio = Column(String)\n    rating = Column(Float)\n    price_per_hour = Column(Float)\n    user_id = Column(Integer, ForeignKey(\"users.id\"))\n\n    user = relationship(\"User\", back_populates=\"psychologist_data\")\n    specializations = relationship(\"Specialization\", secondary=psychologist_specialization, back_populates=\"psychologists\")\n\nclass Specialization(Base):\n    __tablename__ = \"specializations\"\n\n    id = Column(Integer, primary_key=True, index=True)\n    name = Column(String, nullable=False)\n\n    psychologists = relationship(\"PsychologistData\", secondary=psychologist_specialization, back_populates=\"specializations\")\n</code></pre> - \u0421\u0432\u044f\u0437\u044c \"\u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c\" \u043c\u0435\u0436\u0434\u0443 <code>PsychologistData</code> \u0438 <code>Specialization</code>. - \u0421\u0432\u044f\u0437\u044c \"\u043e\u0434\u0438\u043d \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c\" \u043c\u0435\u0436\u0434\u0443 <code>User</code> \u0438 <code>PsychologistData</code>.</p>"},{"location":"lab1/task2/#24-alembic","title":"2.4 \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 Alembic","text":""},{"location":"lab1/task2/#alembic","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f Alembic","text":"<p><pre><code>alembic init migrations\n</code></pre> \u0421\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0444\u0430\u0439\u043b\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 Alembic.</p>"},{"location":"lab1/task2/#alembicini","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 <code>alembic.ini</code>","text":"<p>\u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c <code>alembic.ini</code> \u0438 \u043c\u0435\u043d\u044f\u0435\u043c: <pre><code>sqlalchemy.url = postgresql://postgres:123@localhost:5433/psychologists_db\n</code></pre></p>"},{"location":"lab1/task2/#envpy","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 <code>env.py</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 <code>env.py</code>: <pre><code>from models import Base\ntarget_metadata = Base.metadata\n</code></pre> \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 Alembic \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f\u043c\u0438.</p>"},{"location":"lab1/task2/#25","title":"2.5 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<p>\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u0444\u0430\u0439\u043b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438: <pre><code>alembic revision --autogenerate -m \"initial migration\"\n</code></pre> \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e: <pre><code>alembic upgrade head\n</code></pre></p>"},{"location":"lab1/task2/#26-api-fastapi","title":"2.6 \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f API \u0432 FastAPI","text":"<p>\u0424\u0430\u0439\u043b <code>main.py</code>:</p> <pre><code>from fastapi import FastAPI, Depends, HTTPException\nfrom sqlalchemy.orm import Session\nfrom contextlib import asynccontextmanager\nfrom connection import get_db\nfrom models import User, PsychologistData, Specialization\n\napp = FastAPI()\n\n@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    init_db()\n\n@app.get(\"/users\")\ndef get_users(db: Session = Depends(get_db)):\n    return db.query(User).all()\n\n@app.get(\"/user/{user_id}\")\ndef get_user(user_id: int, db: Session = Depends(get_db)):\n    user = db.query(User).filter(User.id == user_id).first()\n    if not user:\n        raise HTTPException(status_code=404, detail=\"\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n    return user\n\n@app.post(\"/user\")\ndef create_user(user: User, db: Session = Depends(get_db)):\n    db.add(user)\n    db.commit()\n    db.refresh(user)\n    return user\n\n@app.delete(\"/user/{user_id}\")\ndef delete_user(user_id: int, db: Session = Depends(get_db)):\n    user = db.query(User).filter(User.id == user_id).first()\n    if not user:\n        raise HTTPException(status_code=404, detail=\"\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\")\n    db.delete(user)\n    db.commit()\n    return {\"message\": \"\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0434\u0430\u043b\u0451\u043d\"}\n\n@app.get(\"/specializations\")\ndef get_specializations(db: Session = Depends(get_db)):\n    return db.query(Specialization).all()\n\n@app.post(\"/user/{user_id}/specialization/{spec_id}\")\ndef add_specialization(user_id: int, spec_id: int, db: Session = Depends(get_db)):\n    user = db.query(User).filter(User.id == user_id).first()\n    if not user or user.role != \"psychologist\":\n        raise HTTPException(status_code=400, detail=\"User is not a psychologist\")\n\n    specialization = db.query(Specialization).filter(Specialization.id == spec_id).first()\n    if not specialization:\n        raise HTTPException(status_code=404, detail=\"Specialization not found\")\n\n    user.psychologist_data.specializations.append(specialization)\n    db.commit()\n    return user\n\n@app.delete(\"/user/{user_id}/specialization/{spec_id}\")\ndef remove_specialization(user_id: int, spec_id: int, db: Session = Depends(get_db)):\n    user = db.query(User).filter(User.id == user_id).first()\n    if not user or user.role != \"psychologist\":\n        raise HTTPException(status_code=400, detail=\"User is not a psychologist\")\n\n    specialization = db.query(Specialization).filter(Specialization.id == spec_id).first()\n    if not specialization:\n        raise HTTPException(status_code=404, detail=\"Specialization not found\")\n\n    user.psychologist_data.specializations.remove(specialization)\n    db.commit()\n    return {\"message\": \"Specialization removed\"}\n</code></pre>"},{"location":"lab1/task2/#27-sqlalchemy","title":"2.7 \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0411\u0414 \u0447\u0435\u0440\u0435\u0437 SQLAlchemy","text":"<p>\u0424\u0430\u0439\u043b <code>query.py</code>:</p> <p><pre><code>from sqlalchemy.orm import Session\nfrom connection import SessionLocal\nfrom models import User\n\ndb: Session = SessionLocal()\n\nnew_user = User(\n    email=\"murr@example.com\",\n    full_name=\"Meow Meow\",\n    phone=\"+123455590\",\n    role=\"psychologist\"\n)\n\ndb.add(new_user)\ndb.commit()\ndb.refresh(new_user)\nprint(f\"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c: {new_user.full_name}, ID: {new_user.id}\")\n\ndb.close()\n</code></pre> \u042d\u0442\u043e\u0442 \u043a\u043e\u0434: 1. \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. 2. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u0411\u0414. 3. \u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f (<code>commit</code>). 4. \u041e\u0441\u0432\u0435\u0436\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 (<code>refresh</code>). 5. \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e.</p>"},{"location":"lab1/task2/#3","title":"3. \u0412\u044b\u0432\u043e\u0434","text":"<p>\u0412 \u0445\u043e\u0434\u0435 \u0440\u0430\u0431\u043e\u0442\u044b: - \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0430 PostgreSQL \u043a FastAPI. - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 ORM-\u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e SQLAlchemy. - \u041d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u044b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 Alembic. - \u0421\u043e\u0437\u0434\u0430\u043d\u044b CRUD API \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439. ```</p>"},{"location":"lab2/task1/","title":"Task1","text":"<p>\u0422\u0435\u043c\u0430: \u0420\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u043c\u0435\u0436\u0434\u0443 threading, multiprocessing \u0438 async \u0432 Python. \u0417\u0430\u0434\u0430\u0447\u0430: \u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0441\u0443\u043c\u043c\u044b \u0447\u0438\u0441\u0435\u043b \u043e\u0442 1 \u0434\u043e 10 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u043e\u0432 (10\u00b9\u00b3) \u0442\u0440\u0435\u043c\u044f \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438:</p> <ul> <li>\u041f\u043e\u0442\u043e\u043a\u0438 (threading)</li> <li>\u041f\u0440\u043e\u0446\u0435\u0441\u0441\u044b (multiprocessing)</li> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c (async/await)</li> </ul> <p>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041a\u0430\u0436\u0434\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>calculate_sum()</code>. - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f (\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043d\u0430 \u0447\u0430\u0441\u0442\u0438). - \u0417\u0430\u043c\u0435\u0440\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u043f\u043e\u0434\u0445\u043e\u0434\u044b.</p>"},{"location":"lab2/task1/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0439","text":""},{"location":"lab2/task1/#1-threading-threading_sumpy-multithreading_sumpy","title":"1. Threading (<code>threading_sum.py</code> / <code>multithreading_sum.py</code>)","text":"<ul> <li>\u0418\u0434\u0435\u044f: \u0414\u0435\u043b\u0438\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043d\u0430 8 \u0447\u0430\u0441\u0442\u0435\u0439, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c 8 \u043f\u043e\u0442\u043e\u043a\u043e\u0432.</li> <li>\u041a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 \u043d\u0430 \u0441\u0432\u043e\u0451\u043c \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0432 \u043e\u0431\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.</li> <li>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u2014 \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b.</li> </ul>"},{"location":"lab2/task1/#_2","title":"\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430:","text":"<ul> <li>\u041f\u043e\u0442\u043e\u043a\u0438 \u0431\u044b\u0441\u0442\u0440\u0435\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f \u0438 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u044e\u0442\u0441\u044f.</li> <li>\u041d\u0438\u0437\u043a\u0438\u0435 \u043d\u0430\u043a\u043b\u0430\u0434\u043d\u044b\u0435 \u0440\u0430\u0441\u0445\u043e\u0434\u044b.</li> </ul>"},{"location":"lab2/task1/#_3","title":"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043a\u0438:","text":"<ul> <li>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 GIL (Global Interpreter Lock) \u0437\u0430\u043c\u0435\u0434\u043b\u044f\u0435\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u0447\u0438\u0441\u0442\u043e\u043c CPU.</li> <li>\u041f\u043e\u0442\u043e\u043a\u0438 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043f\u0440\u0438 I/O \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u0445, \u0430 \u043d\u0435 \u043f\u0440\u0438 \u0442\u044f\u0436\u0435\u043b\u044b\u0445 \u0440\u0430\u0441\u0447\u0435\u0442\u0430\u0445.</li> </ul>"},{"location":"lab2/task1/#2-multiprocessing-processing_sumpy","title":"2. Multiprocessing (<code>processing_sum.py</code>)","text":"<ul> <li>\u0418\u0434\u0435\u044f: \u0414\u0435\u043b\u0438\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043d\u0430 8 \u0447\u0430\u0441\u0442\u0435\u0439, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c 8 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432.</li> <li>\u041a\u0430\u0436\u0434\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0441\u0432\u043e\u044e \u0441\u0443\u043c\u043c\u0443.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0447\u0435\u0440\u0435\u0434\u044c <code>multiprocessing.Queue()</code> \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432.</li> </ul>"},{"location":"lab2/task1/#_4","title":"\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430:","text":"<ul> <li>\u041d\u0435\u0442 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439 GIL.</li> <li>\u041f\u0440\u043e\u0446\u0435\u0441\u0441\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b \u043d\u0430 \u043c\u043d\u043e\u0433\u043e\u044f\u0434\u0435\u0440\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445.</li> <li>\u0412\u044b\u0441\u043e\u043a\u0430\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0430 CPU-bound \u0437\u0430\u0434\u0430\u0447\u0430\u0445.</li> </ul>"},{"location":"lab2/task1/#_5","title":"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043a\u0438:","text":"<ul> <li>\u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u0430\u043c\u044f\u0442\u0438 \u043d\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b.</li> <li>\u0414\u043e\u0440\u043e\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u043e\u0442\u043e\u043a\u0430\u043c\u0438.</li> </ul>"},{"location":"lab2/task1/#3-asyncawait-async_sumpy-testpy","title":"3. Async/Await (<code>async_sum.py</code> / <code>test.py</code>)","text":"<ul> <li>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c <code>asyncio</code> \u0438 <code>ThreadPoolExecutor</code>.</li> <li>\u041a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0430 (<code>partial_sum</code>) \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 <code>loop.run_in_executor</code>.</li> <li>\u0412 <code>test.py</code> \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0437\u0430\u0434\u0430\u0447 (4, 8, 12, 16, 24, 32).</li> </ul>"},{"location":"lab2/task1/#_6","title":"\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430:","text":"<ul> <li>\u041e\u0442\u043b\u0438\u0447\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 I/O (\u0441\u0435\u0442\u0435\u0432\u044b\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438).</li> <li>\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c.</li> </ul>"},{"location":"lab2/task1/#_7","title":"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043a\u0438:","text":"<ul> <li>\u041d\u0430 \u0447\u0438\u0441\u0442\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f\u0445 async \u0434\u0430\u0451\u0442 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0443\u044e \u043f\u043e\u043b\u044c\u0437\u0443 (\u0432\u0441\u0451 \u0440\u0430\u0432\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0443\u043b \u043f\u043e\u0442\u043e\u043a\u043e\u0432).</li> <li>Async \u043d\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u0435\u043d \u0434\u043b\u044f \u0442\u044f\u0436\u0435\u043b\u044b\u0445 CPU-\u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439 \u0431\u0435\u0437 \u043f\u0440\u044f\u043c\u043e\u0433\u043e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e API.</li> </ul>"},{"location":"lab2/task1/#_8","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439","text":"\u041c\u0435\u0442\u043e\u0434 \u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043d\u0430 10 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430\u0445/1 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0435 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u043e\u0440\u043c\u0443\u043b\u044b \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441\u0438\u0438 \u0417\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u044f Threading ~18-22 \u0441\u0435\u043a\u0443\u043d\u0434/10 \u0441\u0435\u043a\u0443\u043d\u0434 Multiprocessing ~16-18 \u0441\u0435\u043a\u0443\u043d\u0434/46-47 ctreyl \u0421\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 Async/Await ~22-25 \u0441\u0435\u043a\u0443\u043d\u0434/43-45 \u0441\u0435\u043a\u0443\u043d\u0434 \u0421\u0430\u043c\u044b\u0439 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439"},{"location":"lab2/task1/#12","title":"\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0435\u0435 \u0431\u0440\u0430\u0442\u044c (\u0443 \u043c\u0435\u043d\u044f 12 \u044f\u0434\u0435\u0440)","text":"<p>Tasks: 4, Time: 0.01 seconds</p> <p>Tasks: 8, Time: 0.00 seconds</p> <p>Tasks: 12, Time: 0.00 seconds</p> <p>Tasks: 16, Time: 0.01 seconds</p> <p>Tasks: 24, Time: 0.01 seconds</p> <p>Tasks: 32, Time: 0.01 seconds</p>"},{"location":"lab2/task1/#_9","title":"\u0412\u044b\u0432\u043e\u0434\u044b","text":"<ul> <li>Multiprocessing \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u0435\u0435 \u0432\u0441\u0435\u0445 \u043d\u0430 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0447\u0438\u0441\u043b\u0430\u0445, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0440\u0435\u0430\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u0441\u0435 \u044f\u0434\u0440\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430.</li> <li>Threading \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b, \u043d\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d GIL.</li> <li>Async \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e async \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u0435\u043d \u0434\u043b\u044f \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043d\u043e \u043d\u0435 \u0434\u043b\u044f \u0447\u0438\u0441\u0442\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439.</li> </ul> <p>\u0418\u0442\u043e\u0433: \u0414\u043b\u044f \u0447\u0438\u0441\u0442\u044b\u0445 \u0442\u044f\u0436\u0451\u043b\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439 \u0442\u0438\u043f\u0430 \u0441\u0443\u043c\u043c\u044b \u043e\u0442 1 \u0434\u043e 10\u00b9\u00b3 \u043b\u0443\u0447\u0448\u0438\u0439 \u0432\u044b\u0431\u043e\u0440 \u2014 multiprocessing.</p>"},{"location":"lab2/task2/","title":"Task2","text":""},{"location":"lab2/task2/#_1","title":"\u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u041e\u0431\u0449\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 <code>parse_and_save(url, table_name)</code>: - \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. - \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442:   - \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 (<code>&lt;h1&gt;</code>).   - \u041f\u0435\u0440\u0432\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 (<code>&lt;p&gt;</code>). - \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 PostgreSQL \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443:   - <code>specializations_threading</code>   - <code>specializations_multiprocessing</code>   - <code>specializations_async</code></p>"},{"location":"lab2/task2/#_2","title":"\u0422\u0440\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430:","text":"<ul> <li><code>threading_scraper.py</code></li> <li><code>multiprocessing_scraper.py</code></li> <li><code>async_scraper.py</code></li> </ul> <p>\u041a\u0430\u0436\u0434\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0432\u043e\u044e \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430.</p>"},{"location":"lab2/task2/#_3","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439","text":"\u041c\u0435\u0442\u043e\u0434 \u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 Threading ~48 \u0441\u0435\u043a\u0443\u043d\u0434 210+ \u0421\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0439 Multiprocessing ~25 \u0441\u0435\u043a\u0443\u043d\u0434 210+ \u0421\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 Async/Await ~78 \u0441\u0435\u043a\u0443\u043d\u0434 210+ \u0421\u0430\u043c\u044b\u0439 \u043b\u0451\u0433\u043a\u0438\u0439 \u043f\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430\u043c"},{"location":"lab2/task2/#_4","title":"\u0412\u044b\u0432\u043e\u0434\u044b","text":"<ul> <li>Multiprocessing \u0441\u043d\u043e\u0432\u0430 \u043b\u0438\u0434\u0438\u0440\u0443\u0435\u0442 \u043f\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u0438.</li> <li>Threading \u0434\u0430\u0451\u0442 \u043d\u0435\u043f\u043b\u043e\u0445\u0443\u044e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.</li> <li>Async \u0431\u044b\u043b \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d \u0438\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c\u0438 \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0430\u043c\u0438 \u0438 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b Wikipedia \u0438 \u043e\u0442 \u0442\u0430\u0439\u043c\u0430\u0443\u0442\u043e\u0432</li> </ul>"},{"location":"lab2/task2/#so","title":"So...","text":"\u041c\u0435\u0442\u043e\u0434 \u0413\u0434\u0435 \u043b\u0443\u0447\u0448\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c? Threading \u0421\u0435\u0442\u0435\u0432\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b, \u043b\u0435\u0433\u043a\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 Multiprocessing \u0422\u044f\u0436\u0435\u043b\u044b\u0435 \u0440\u0430\u0441\u0447\u0435\u0442\u044b, \u043f\u043e\u043b\u043d\u0430\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 CPU Async/Await \u041c\u043d\u043e\u0433\u043e \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (I/O)"},{"location":"lab3/tasks/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163","text":"<p>\u0423\u043f\u0430\u043a\u043e\u0432\u043a\u0430 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 Docker, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438</p>"},{"location":"lab3/tasks/#_1","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>Lab_3/\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 psychologists_service/       # FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21161)\n\u2502   \u2514\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 parser/                      # \u041f\u0430\u0440\u0441\u0435\u0440 (\u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21162)\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 server.py                # FastAPI \u0434\u043b\u044f HTTP-\u0432\u044b\u0437\u043e\u0432\u0430\n\u2502   \u251c\u2500\u2500 tasks.py                 # Celery-\u0437\u0430\u0434\u0430\u0447\u0438\n\u2502   \u251c\u2500\u2500 parser.py                # \u041b\u043e\u0433\u0438\u043a\u0430 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0432 \u0411\u0414\n\u2502   \u2514\u2500\u2500 dtos.py                  # DTO \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n\u2514\u2500\u2500 requirements.txt            # \u041e\u0431\u0449\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n</code></pre>"},{"location":"lab3/tasks/#1-docker","title":"1. \u0423\u043f\u0430\u043a\u043e\u0432\u043a\u0430 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0432 Docker","text":"<p>\u0421\u043e\u0437\u0434\u0430\u043d\u043e 5 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u0432:</p> <ul> <li>web_app \u2014 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435 FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435</li> <li>parser_worker \u2014 \u0432\u043e\u0440\u043a\u0435\u0440 Celery</li> <li>parser_api \u2014 FastAPI-\u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u043f\u043e HTTP</li> <li>db \u2014 PostgreSQL 15</li> <li>redis \u2014 \u0431\u0440\u043e\u043a\u0435\u0440 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 Redis</li> </ul>"},{"location":"lab3/tasks/#docker-composeyml","title":"<code>docker-compose.yml</code>","text":"<pre><code>services:\n  redis:\n    image: redis:7\n    ports:\n      - \"6379:6379\"\n\n  db:\n    image: postgres:15\n    ports:\n      - \"5444:5432\"\n    healthcheck:\n      test: [ \"CMD-SHELL\", \"pg_isready -U postgres -d psychologists_db\" ]\n      interval: 5s\n      timeout: 5s\n      retries: 5\n    environment:\n      POSTGRES_DB: psychologists_db\n      POSTGRES_USER: postgres\n      POSTGRES_HOST_AUTH_METHOD: trust\n\n  web_app:\n    build: ./psychologists_service\n    ports:\n      - \"8005:8000\"\n    depends_on:\n      db:\n        condition: service_healthy\n    environment:\n      DB_HOST: db\n      DB_PORT: 5432\n      DB_NAME: psychologists_db\n      DB_USER: postgres\n    env_file:\n      - ./psychologists_service/.env\n    volumes:\n      - ./psychologists_service:/code\n    command: bash -c \"alembic upgrade head &amp;&amp; uvicorn app.main:app --host 0.0.0.0 --port 8000\"\n\n  parser_worker:\n    build: ./parser\n    command: celery -A tasks worker --loglevel=info --max-tasks-per-child=10\n    depends_on:\n      db:\n        condition: service_healthy\n      redis:\n        condition: service_started\n    volumes:\n      - ./parser:/parser\n    environment:\n      DB_HOST: db\n      DB_PORT: 5432\n      DB_NAME: psychologists_db\n      DB_USER: postgres\n\n  parser_api:\n    build: ./parser\n    command: uvicorn server:app --host 0.0.0.0 --port 8010\n    ports:\n      - \"8010:8010\"\n    depends_on:\n      db:\n        condition: service_healthy\n      redis:\n        condition: service_started\n    volumes:\n      - ./parser:/parser\n    environment:\n      DB_HOST: db\n      DB_PORT: 5432\n      DB_NAME: psychologists_db\n      DB_USER: postgres\n</code></pre>"},{"location":"lab3/tasks/#2-http-","title":"2. HTTP-\u0432\u044b\u0437\u043e\u0432 \u043f\u0430\u0440\u0441\u0435\u0440\u0430","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 FastAPI-\u0441\u0435\u0440\u0432\u0438\u0441 <code>parser_api</code> \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 <code>8010</code>. \u041e\u043d \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0432\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430:</p>"},{"location":"lab3/tasks/#post-parse","title":"<code>POST /parse</code>","text":"<p>\u0421\u0440\u0430\u0437\u0443 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u043f\u043e URL \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0411\u0414.</p>"},{"location":"lab3/tasks/#post-enqueue-parse","title":"<code>POST /enqueue-parse</code>","text":"<p>\u0421\u0442\u0430\u0432\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c Celery.</p> <p>\u0424\u0430\u0439\u043b: <code>parser/server.py</code></p>"},{"location":"lab3/tasks/#3-celery-redis","title":"3. \u0412\u044b\u0437\u043e\u0432 \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u0447\u0435\u0440\u0435\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u044c (Celery + Redis)","text":"<p>\u0424\u0430\u0439\u043b <code>parser/tasks.py</code>:</p> <pre><code>import asyncio\n\nimport aiohttp\nfrom celery import Celery\n\nfrom parser import parse_and_save_async\n\ncelery_app = Celery(\n    \"parser\",\n    broker=\"redis://redis:6379/0\",\n    backend='redis://redis:6379/0',\n)\n\n# celery_app.config_from_object(\"celery_config\")\n\n@celery_app.task\ndef run_parsing_task(req: dict):\n    url = req[\"url\"]\n    table_name = req[\"table_name\"]\n\n    async def wrapper():\n        async with aiohttp.ClientSession() as session:\n            await parse_and_save_async(session, url, table_name)\n\n    asyncio.run(wrapper())\n</code></pre> <p>\u0417\u0430\u0434\u0430\u0447\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0437 FastAPI \u0447\u0435\u0440\u0435\u0437:</p> <pre><code>run_parsing_task.delay(req.dict())\n</code></pre>"}]}